
trigger:
- main

variables:
  - name: version
    value: $(Build.BuildNumber)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CI
    jobs:
      - job: Build
        steps:
        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false
      
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)/target'
            ArtifactName: '$(Build.Repository.Name)'
            publishLocation: 'Container'
  - stage: Docker  
    displayName: docker image build and push
    jobs:
      - job: docker
        steps:
        - task: DownloadBuildArtifacts@1
          inputs:
            buildType: 'current'
           # downloadType: 'single'
            downloadPath: '$(Build.ArtifactStagingDirectory)'
            tags: '$(version)'

        - script: |
                 cp $(Build.ArtifactStagingDirectory)/sreeni-sanni/accountRegistrationAPI/accountRegistrationAPI-0.0.1.jar $(Build.SourcesDirectory)
           
        - task: Docker@2
          inputs:
            containerRegistry: 'dockerHub'
            repository: 'sanniboena/accountregistration'
            command: 'buildAndPush'
            Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
            tags: $(build.buildid)
  - stage: Deploy
    displayName: Helm deploy
    jobs:
      - job: PublishPipelineArtifact
        steps:
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)'

          - task: CmdLine@2
            inputs:
             script: |
                   cd $(Build.SourcesDirectory)
                   ls

      - job: Installanddeployhelm
        steps:      
          - task: HelmInstaller@0
            inputs:
              helmVersion: '3.4.2'
              installKubectl: false
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'aks'
              #namespace: 'accountregisterapins'
              command: 'upgrade'
              chartType: FilePath
              chartPath: '$(Build.SourcesDirectory)/accountchart'
              #chartName: '$(Build.SourcesDirectory)'
              valueFile: '$(Build.SourcesDirectory)/accountchart/values.yaml'
              releaseName: 'account-chart'
              overrideValues: 'image.tag=$(version)'